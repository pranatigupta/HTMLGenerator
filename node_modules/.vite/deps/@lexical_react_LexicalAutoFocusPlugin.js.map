{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalAutoFocusPlugin.dev.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction AutoFocusPlugin({\n  defaultSelection\n}) {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    editor.focus(() => {\n      // If we try and move selection to the same point with setBaseAndExtent, it won't\n      // trigger a re-focus on the element. So in the case this occurs, we'll need to correct it.\n      // Normally this is fine, Selection API !== Focus API, but fore the intents of the naming\n      // of this plugin, which should preserve focus too.\n      const activeElement = document.activeElement;\n      const rootElement = editor.getRootElement();\n      if (rootElement !== null && (activeElement === null || !rootElement.contains(activeElement))) {\n        // Note: preventScroll won't work in Webkit.\n        rootElement.focus({\n          preventScroll: true\n        });\n      }\n    }, {\n      defaultSelection\n    });\n  }, [defaultSelection, editor]);\n  return null;\n}\n\nexport { AutoFocusPlugin };\n"],
  "mappings": ";;;;;;;;;;;AASA,mBAA0B;AAU1B,SAAS,gBAAgB;AAAA,EACvB;AACF,GAAG;AACD,QAAM,CAAC,MAAM,IAAI,0BAA0B;AAC3C,8BAAU,MAAM;AACd,WAAO,MAAM,MAAM;AAKjB,YAAM,gBAAgB,SAAS;AAC/B,YAAM,cAAc,OAAO,eAAe;AAC1C,UAAI,gBAAgB,SAAS,kBAAkB,QAAQ,CAAC,YAAY,SAAS,aAAa,IAAI;AAE5F,oBAAY,MAAM;AAAA,UAChB,eAAe;AAAA,QACjB,CAAC;AAAA,MACH;AAAA,IACF,GAAG;AAAA,MACD;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,kBAAkB,MAAM,CAAC;AAC7B,SAAO;AACT;",
  "names": []
}
